//
// Foundation Variables
//

// The default font-size is set to 100% of the browser style sheet (usually 16px)
// for compatibility with browser-based text zoom or user-set defaults.
$base-font-size: 100% !default;

// $base-line-height is 24px while $base-font-size is 16px
// $base-line-height: 150%;

// This is the default html and body font-size for the base em value.

// Since the typical default browser font-size is 16px, that makes the calculation for grid size.
// If you want your base font-size to be a different size and not have it effect grid size too,
// set the value of $em-base to $base-font-size ($em-base: $base-font-size;)
$em-base: 16 !default;

// It strips the unit of measure and returns it
@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

// Converts "px" to "em" using the ($)em-base
@function convert-to-em($value)  {
  $value: strip-unit($value) / strip-unit($em-base) * 1em;
  @if ($value == 0em) { $value: 0; } // Turn 0em into 0
  @return $value;
}

// Working in ems is annoying. Think in pixels by using this handy function, emCalc(#)
// Just enter the number, no need to mention "px"
@function emCalc($values...) {
  $max: length($values); // Get the total number of parameters passed

  // If there is only 1 parameter, then return it as an integer.
  // This is done because a list can't be multiplied or divided even if it contains a single value
  @if $max == 1 { @return convert-to-em(nth($values, 1)); }

  $emValues: (); // This will eventually store the converted $values in a list
  @for $i from 1 through $max {
    $emValues: append($emValues, convert-to-em(nth($values, $i)));
  }
  @return $emValues;
}

// Change whether or not you include browser prefixes
// $experimental: true;


// -----------------------------------------------------------------------------
// Various global styles
// -----------------------------------------------------------------------------

$default-float: left;

// Make sure border radius matches unless we want it different.

$global-radius: 4px;
// $global-rounded: 1000px;

// Inset shadow shiny edges and depressions.

$shiny-edge-size: 0;
// $shiny-edge-color: rgba(#fff, .5);
// $shiny-edge-active-color: rgba(#000, .2);

// Control whether or not CSS classes come through in the CSS files.

$include-html-classes: true;
// $include-print-styles: true;
// $include-html-global-classes: $include-html-classes;
$include-html-inline-list-classes: $include-html-classes;
$include-html-type-classes: $include-html-classes;
// $include-html-grid-classes: $include-html-classes;
$include-html-visibility-classes: $include-html-classes;
// $include-html-button-classes: $include-html-classes;
// $include-html-form-classes: $include-html-classes;
// $include-html-custom-form-classes: $include-html-classes;
// $include-html-media-classes: $include-html-classes;
// $include-html-section-classes: $include-html-classes;
$include-html-orbit-classes: $include-html-classes;
// $include-html-reveal-classes: $include-html-classes;
// $include-html-joyride-classes: $include-html-classes;
// $include-html-clearing-classes: $include-html-classes;
// $include-html-alert-classes: $include-html-classes;
// $include-html-nav-classes: $include-html-classes;
// $include-html-top-bar-classes: $include-html-classes;
// $include-html-label-classes: $include-html-classes;
// $include-html-panel-classes: $include-html-classes;
// $include-html-pricing-classes: $include-html-classes;
// $include-html-progress-classes: $include-html-classes;
// $include-html-magellan-classes: $include-html-classes;
// $include-html-tooltip-classes: $include-html-classes;

// Media Queries

$tiny-screen: 640px; // Added by Venuu, targeted for mobile phones (768px hits tablets too)
// $small-screen: 768px;
$middle-screen: 1024px;
// $medium-screen: 1280px;
// $large-screen: 1440px;

// $screen: "only screen";
$tiny: "only screen and (min-width: #{$tiny-screen})";
// $small: "only screen and (min-width: #{$small-screen})";
$middle: "only screen and (min-width: #{$middle-screen})";
// $medium: "only screen and (min-width: #{$medium-screen})";
// $large: "only screen and (min-width: #{$large-screen})";
// $landscape: "only screen and (orientation: landscape)";
// $portrait: "only screen and (orientation: portrait)";

// -----------------------------------------------------------------------------
// Cursors
// -----------------------------------------------------------------------------

// Custom use example ->
// $cursor-default-value: url(http://cursors-site.net/path/to/custom/cursor/default.cur),progress;

// $cursor-crosshair-value: "crosshair";
// $cursor-default-value: "default";
// $cursor-pointer-value: "pointer";
// $cursor-help-value: "help";
